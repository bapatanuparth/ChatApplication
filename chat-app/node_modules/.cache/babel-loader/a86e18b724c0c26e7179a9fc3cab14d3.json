{"ast":null,"code":"var _jsxFileName = \"C:\\\\WORK\\\\react\\\\projects_5\\\\chat-app\\\\src\\\\components\\\\Search.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { collection, getDocs, query, setDoc, where, doc, updateDoc, serverTimestamp, getDoc } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  //when we search for a user, we change the username value\n  const [username, setUsername] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [err, setErr] = useState(false);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n\n  const handleSearch = async () => {\n    //firebase function to build query\n    const q = query(collection(db, \"users\"), //search in users collection as someone is typing\n    where(\"displayName\", \"==\", username) //if we find a username match,\n    );\n\n    try {\n      const querySnapshot = await getDocs(q); //set User to the matched username on Enter button hit\n\n      querySnapshot.forEach(doc => {\n        setUser(doc.data()); //in our user we have the searched user here\n      });\n    } catch (error) {\n      setErr(error);\n    }\n  };\n\n  const handleKey = e => {\n    e.code === \"Enter\" && handleSearch();\n  };\n\n  const handleSelect = async () => {\n    //check whether the group (chats in firestore) exists or not\n    //else create new conversation\n    console.log(\"user clicked\");\n    console.log(currentUser.uid);\n    const combinedId = currentUser.uid > user.uid ? currentUser.uid + user.uid : user.uid + currentUser.uid;\n\n    try {\n      const res = await getDoc(doc(db, \"chats\", combinedId));\n\n      if (!res.exists()) {\n        //create a new chat between those 2 users.\n        await setDoc(doc, (db, \"chats\", combinedId), {\n          messages: []\n        }); //create user chats -- in userchats collection, for current user, add new user as a chat\n\n        await updateDoc(doc(db, \"userChats\", currentUser.uid), {\n          [combinedId + \".userInfo\"]: {\n            uid: user.uid,\n            displayName: user.displayName,\n            photoURL: user.photoURL\n          },\n          [combinedId + \".date\"]: serverTimestamp() //firebase provided timestamp\n\n        }); //for the new user, add current user as a chat\n        //this way both current user, and user that was searched, both have each other's entry in userchats db\n\n        await updateDoc(doc(db, \"userChats\", user.uid), {\n          [combinedId + \".userInfo\"]: {\n            uid: currentUser.uid,\n            displayName: currentUser.displayName,\n            photoURL: currentUser.photoURL\n          },\n          [combinedId + \".date\"]: serverTimestamp()\n        });\n      }\n    } catch (err) {} //create userchats\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchForm\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Find a User\",\n        onKeyDown: handleKey,\n        onChange: e => setUsername(e.target.value),\n        value: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), err && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \" Not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }, this), user && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userChat\",\n      onClick: handleSelect,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: user.photoURL,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userChatInfo\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: user.displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"ZXQzUE3EguMIuY/UQNcA26iC/M4=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/WORK/react/projects_5/chat-app/src/components/Search.jsx"],"names":["React","useContext","useState","collection","getDocs","query","setDoc","where","doc","updateDoc","serverTimestamp","getDoc","db","AuthContext","Search","username","setUsername","user","setUser","err","setErr","currentUser","handleSearch","q","querySnapshot","forEach","data","error","handleKey","e","code","handleSelect","console","log","uid","combinedId","res","exists","messages","displayName","photoURL","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  query,\r\n  setDoc,\r\n  where,\r\n  doc,\r\n  updateDoc,\r\n  serverTimestamp,\r\n  getDoc,\r\n} from \"firebase/firestore\";\r\nimport { db } from \"../firebase\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nconst Search = () => {\r\n  //when we search for a user, we change the username value\r\n  const [username, setUsername] = useState(\"\");\r\n  const [user, setUser] = useState(null);\r\n  const [err, setErr] = useState(false);\r\n\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  const handleSearch = async () => {\r\n    //firebase function to build query\r\n    const q = query(\r\n      collection(db, \"users\"), //search in users collection as someone is typing\r\n      where(\"displayName\", \"==\", username) //if we find a username match,\r\n    );\r\n    try {\r\n      const querySnapshot = await getDocs(q); //set User to the matched username on Enter button hit\r\n      querySnapshot.forEach((doc) => {\r\n        setUser(doc.data()); //in our user we have the searched user here\r\n      });\r\n    } catch (error) {\r\n      setErr(error);\r\n    }\r\n  };\r\n\r\n  const handleKey = (e) => {\r\n    e.code === \"Enter\" && handleSearch();\r\n  };\r\n\r\n  const handleSelect = async () => {\r\n    //check whether the group (chats in firestore) exists or not\r\n    //else create new conversation\r\n\r\n    console.log(\"user clicked\");\r\n    console.log(currentUser.uid);\r\n    const combinedId =\r\n      currentUser.uid > user.uid\r\n        ? currentUser.uid + user.uid\r\n        : user.uid + currentUser.uid;\r\n\r\n    try {\r\n      const res = await getDoc(doc(db, \"chats\", combinedId));\r\n      if (!res.exists()) {\r\n        //create a new chat between those 2 users.\r\n        await setDoc(doc, (db, \"chats\", combinedId), { messages: [] });\r\n\r\n        //create user chats -- in userchats collection, for current user, add new user as a chat\r\n        await updateDoc(doc(db, \"userChats\", currentUser.uid), {\r\n          [combinedId + \".userInfo\"]: {\r\n            uid: user.uid,\r\n            displayName: user.displayName,\r\n            photoURL: user.photoURL,\r\n          },\r\n          [combinedId + \".date\"]: serverTimestamp(), //firebase provided timestamp\r\n        });\r\n        //for the new user, add current user as a chat\r\n        //this way both current user, and user that was searched, both have each other's entry in userchats db\r\n        await updateDoc(doc(db, \"userChats\", user.uid), {\r\n          [combinedId + \".userInfo\"]: {\r\n            uid: currentUser.uid,\r\n            displayName: currentUser.displayName,\r\n            photoURL: currentUser.photoURL,\r\n          },\r\n          [combinedId + \".date\"]: serverTimestamp(),\r\n        });\r\n      }\r\n    } catch (err) {}\r\n\r\n    //create userchats\r\n  };\r\n  return (\r\n    <div className=\"search\">\r\n      <div className=\"searchForm\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Find a User\"\r\n          onKeyDown={handleKey}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          value={username}\r\n        />\r\n      </div>\r\n      {err && <span> Not found</span>}\r\n      {user && (\r\n        <div className=\"userChat\" onClick={handleSelect}>\r\n          <img src={user.photoURL} alt=\"\" />\r\n          <div className=\"userChatInfo\">\r\n            <span>{user.displayName}</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}