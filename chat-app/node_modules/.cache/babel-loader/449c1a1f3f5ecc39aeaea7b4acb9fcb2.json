{"ast":null,"code":"var _jsxFileName = \"C:\\\\WORK\\\\react\\\\projects_5\\\\chat-app\\\\src\\\\components\\\\Chats.jsx\",\n    _s = $RefreshSig$();\n\nimport { doc, onSnapshot } from \"firebase/firestore\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { db } from \"../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chats = () => {\n  _s();\n\n  var _Object$entries;\n\n  const [chats, setChats] = useState([]);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  useEffect(() => {\n    const getChats = () => {\n      const unsub = onSnapshot(doc(db, \"UserChats\", currentUser.uid), doc => {\n        setChats(doc.data());\n      });\n      return () => {\n        unsub();\n      };\n    };\n\n    currentUser.uid && getChats(); //we wrap in this function to ake sure that useEffect runs only after we have a user\n  }, [currentUser.uid]);\n  console.log(Object.entries(chats));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chats\",\n    children: (_Object$entries = Object.entries(chats)) === null || _Object$entries === void 0 ? void 0 : _Object$entries.map(chat => {\n      var _chat$1$lastMessage;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userChat\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://images.pexels.com/photos/13865184/pexels-photo-13865184.jpeg?auto=compress&cs=tinysrgb&w=600&lazy=load\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userChatInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: chat[1].userInfo.displayName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: (_chat$1$lastMessage = chat[1].lastMessage) === null || _chat$1$lastMessage === void 0 ? void 0 : _chat$1$lastMessage.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, chat[0], true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chats, \"eXxQig5BaCIGxU142nLW6IWOEjo=\");\n\n_c = Chats;\nexport default Chats;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chats\");","map":{"version":3,"sources":["C:/WORK/react/projects_5/chat-app/src/components/Chats.jsx"],"names":["doc","onSnapshot","React","useContext","useEffect","useState","AuthContext","db","Chats","chats","setChats","currentUser","getChats","unsub","uid","data","console","log","Object","entries","map","chat","userInfo","displayName","lastMessage","text"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,UAAd,QAAgC,oBAAhC;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,EAAT,QAAmB,aAAnB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM;AAAEM,IAAAA;AAAF,MAAkBR,UAAU,CAACG,WAAD,CAAlC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,QAAQ,GAAG,MAAM;AACrB,YAAMC,KAAK,GAAGZ,UAAU,CAACD,GAAG,CAACO,EAAD,EAAK,WAAL,EAAkBI,WAAW,CAACG,GAA9B,CAAJ,EAAyCd,GAAD,IAAS;AACvEU,QAAAA,QAAQ,CAACV,GAAG,CAACe,IAAJ,EAAD,CAAR;AACD,OAFuB,CAAxB;AAIA,aAAO,MAAM;AACXF,QAAAA,KAAK;AACN,OAFD;AAGD,KARD;;AAUAF,IAAAA,WAAW,CAACG,GAAZ,IAAmBF,QAAQ,EAA3B,CAXc,CAWiB;AAChC,GAZQ,EAYN,CAACD,WAAW,CAACG,GAAb,CAZM,CAAT;AAcAE,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,OAAP,CAAeV,KAAf,CAAZ;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,iCACGS,MAAM,CAACC,OAAP,CAAeV,KAAf,CADH,oDACG,gBAAuBW,GAAvB,CAA4BC,IAAD;AAAA;;AAAA,0BAC1B;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACE;AACE,UAAA,GAAG,EAAC,gHADN;AAEE,UAAA,GAAG,EAAC;AAFN;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACE;AAAA,sBAAOA,IAAI,CAAC,CAAD,CAAJ,CAAQC,QAAR,CAAiBC;AAAxB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,6CAAIF,IAAI,CAAC,CAAD,CAAJ,CAAQG,WAAZ,wDAAI,oBAAqBC;AAAzB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA,SAA+BJ,IAAI,CAAC,CAAD,CAAnC;AAAA;AAAA;AAAA;AAAA,cAD0B;AAAA,KAA3B;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CApCD;;GAAMb,K;;KAAAA,K;AAsCN,eAAeA,KAAf","sourcesContent":["import { doc, onSnapshot } from \"firebase/firestore\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { db } from \"../firebase\";\r\n\r\nconst Chats = () => {\r\n  const [chats, setChats] = useState([]);\r\n\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    const getChats = () => {\r\n      const unsub = onSnapshot(doc(db, \"UserChats\", currentUser.uid), (doc) => {\r\n        setChats(doc.data());\r\n      });\r\n\r\n      return () => {\r\n        unsub();\r\n      };\r\n    };\r\n\r\n    currentUser.uid && getChats(); //we wrap in this function to ake sure that useEffect runs only after we have a user\r\n  }, [currentUser.uid]);\r\n\r\n  console.log(Object.entries(chats));\r\n  return (\r\n    <div className=\"chats\">\r\n      {Object.entries(chats)?.map((chat) => (\r\n        <div className=\"userChat\" key={chat[0]}>\r\n          <img\r\n            src=\"https://images.pexels.com/photos/13865184/pexels-photo-13865184.jpeg?auto=compress&cs=tinysrgb&w=600&lazy=load\"\r\n            alt=\"\"\r\n          />\r\n          <div className=\"userChatInfo\">\r\n            <span>{chat[1].userInfo.displayName}</span>\r\n            <p>{chat[1].lastMessage?.text}</p>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chats;\r\n"]},"metadata":{},"sourceType":"module"}